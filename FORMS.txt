/////////////////
///// FORMIK ////
////////////////
==>  npm install formik yup --save
==> import { Formik } from 'formik'

===>import React from 'react';
import { Formik } from 'formik'


const FormOne = () => {

    return (
      <Formik
        initialValues={{
          firstname:'steve',
          lastname:'',
          email:'',
          country:'',
          state:'',
          zip:''
        }}
        onSubmit={()=>{
          console.log('form submitted')// THIS CONTROL THE FORM
        }}
      >
        { ({
          values,
          errors,
          touched,
          handleChange,
          handleBlur,
          handleSubmit
        }) => (
        <div className="container">
          <div className="col-md-12 mt-5">
          <form onSubmit={handleSubmit}>
            <h4 className="mb-3">Personal information</h4>

            <div className="row">
              <div className="col-md-6 mb-3">
                <label htmlFor="firstname">First name</label>
                <input
                  type="text"
                  className="form-control"
                  id="firstname"
                  name="firstname"
                  value={values.firstname}// THIS WORK WITH VALUE
                  onChange={handleChange}
                />
              </div>
              <div className="col-md-6 mb-3">
                <label htmlFor="lastname">Last name</label>
                <input type="text" className="form-control" id="lastname" name="lastname"/>
              </div>
            </div>

          </form>
        </div>
        </div>
        )}
      </Formik>
    );
}
export default FormOne;
/////////////////
////VALIDATION //
////////////////
===>import React from 'react';
import { Formik } from 'formik'


const FormOne = () => {

    return (
      <Formik
        initialValues={{
          firstname:'',
          lastname:'',
          email:'',
          country:'',
          state:'',
          zip:''
        }}
        validate={ values => {
          const errors = {};

          if(!values.firstname){
            errors.firstname = 'Sorry, this is required';
          }


          return errors;
        }}
        onSubmit={( values )=>{// SUBMIT FORM HERE
          console.log(values)
        }}
      >
        { ({
          values,
          errors,
          touched,
          handleChange,
          handleBlur,
          handleSubmit
        }) => (
        <div className="container">
          <div className="col-md-12 mt-5">
          <form onSubmit={handleSubmit}>
            <h4 className="mb-3">Personal information</h4>

            <div className="row">
              <div className="col-md-6 mb-3">
                <label htmlFor="firstname">First name</label>
                <input
                  type="text"
                  className="form-control"
                  id="firstname"
                  name="firstname"
                  value={values.firstname}
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                { errors.firstname && touched.firstname ? // ERROR MESSAGE
                  <span>{ errors.firstname }</span>
                :null}
              </div>
              <div className="col-md-6 mb-3">
                <label htmlFor="lastname">Last name</label>
                <input
                  type="text"
                  className="form-control"
                  id="lastname"
                  name="lastname"
                  value={values.lastname}// VALIDATE
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                { errors.lastname && touched.lastname ?
                  <span>{ errors.lastname }</span>
                :null}
              </div>
            </div>


            <hr className="mb-4"/>
            <button className="btn btn-primary btn-lg btn-block" type="submit">
              Submit
            </button>
          </form>
          </div>
        </div>
        )}
      </Formik>
    );
}
export default FormOne;
/////////////////
///// YUP ////
////////////////
import React from 'react';
import { Formik } from 'formik';
import * as Yup from 'yup';


const FormOne = () => {

    return (
      <Formik
        initialValues={{
          firstname:'',
          lastname:'',
          email:'',
          country:'',
          state:'',
          zip:''
        }}
        validationSchema={Yup.object({
          firstname: Yup
          .string()
          .required('Sorry, this is required')
          .max(5,'Sorry the name is too long'),
          lastname: Yup
          .string()
          .required('Sorry, this is required'),

        })}
        onSubmit={( values )=>{
          console.log(values)
        }}
      >
        { ({
          values,
          errors,
          touched,
          handleChange,
          handleBlur,
          handleSubmit
        }) => (
        <div className="container">
          <div className="col-md-12 mt-5">
          <form onSubmit={handleSubmit}>
            <h4 className="mb-3">Personal information</h4>

            <div className="row">
              <div className="col-md-6 mb-3">
                <label htmlFor="firstname">First name</label>
                <input
                  type="text"
                  className="form-control"
                  id="firstname"
                  name="firstname"
                  value={values.firstname}
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                { errors.firstname && touched.firstname ?
                  <span>{ errors.firstname }</span>
                :null}
              </div>
              <div className="col-md-6 mb-3">
                <label htmlFor="lastname">Last name</label>
                <input
                  type="text"
                  className="form-control"
                  id="lastname"
                  name="lastname"
                  value={values.lastname}
                  onChange={handleChange}
                  onBlur={handleBlur}
                />
                { errors.lastname && touched.lastname ?
                  <span>{ errors.lastname }</span>
                :null}
              </div>
            </div>


            <hr className="mb-4"/>
            <button className="btn btn-primary btn-lg btn-block" type="submit">
              Submit
            </button>
          </form>
          </div>
        </div>
        )}
      </Formik>

    );
}
export default FormOne;
/////////////////
///// HOOKS ////
////////////////
import React from 'react';
import { useFormik } from 'formik';// useFormik IS HOOK
import * as Yup from 'yup';

const FormTwo = () => {
    const formik = useFormik({
        initialValues:{ firstname:'' },
        validationSchema:Yup.object({
            firstname: Yup
            .string()
            .required('Sorry, this is required')
        }),
        onSubmit: values => {
            console.log(values)
        }
    })

    return(
        <div className="container">
            <div className="col-md-12 mt-5">
                <form onSubmit={formik.handleSubmit}>
                    <label htmlFor="firstname">First name</label>
                    <input
                        className="form-control"
                        type="text"
                        name="firstname"
                        {...formik.getFieldProps('firstname')}// WITH getFieldProps DONT NEED BELOW

                        // onChange={formik.handleChange}
                        // onBlur={formik.handleBlur}
                        // value={formik.values.firstname}
                    />
                    { formik.errors.firstname && formik.touched.firstname ?
                        <span>{ formik.errors.firstname }</span>
                    :null}

                    <hr className="mb-4" />
                    <button className="btn btn-primary btn-lg btn-block" type="submit">
                        Submit
                    </button>
                </form>
            </div>
        </div>

    )
}

export default FormTwo;

/////////////////
//CUSTOMS COMPENENTS ////
////////////////
import React from 'react';
import { Formik , Form, Field, ErrorMessage } from 'formik';// HERE COMPONENTS
import * as Yup from 'yup';

const FormThree = () => {

    const formikProps = {
        initialValues:{ firstname:'', color:'', lastname:'',age:''},
        validationSchema:Yup.object({
            firstname: Yup.string().required('Sorry, this is required'),
            lastname: Yup.string().required('Sorry, this is required'),
            age: Yup.string().required('Sorry, this is required')
        }),
        onSubmit: values => {
            console.log(values)
        }
    }

    const formikInputCustomField = ({
        field, // {name, value, onChange, onBlur}
        form: { touched, errors },
        ...props
    }) => (
        <>
            <label htmlFor={field.name}>{props.labelName}</label>
            <input
                type="text"
                className="form-control"
                placeholder={props.placeholder}
                {...field}
            />
            { errors[field.name] && touched[field.name] ?
                <span>{errors[field.name]}</span>
            :null
            }
        </>

    )

    return(
        <Formik {...formikProps}>
            { formik => (
                <div className="container">
                    <div className="col-md-12 mt-5">
                        <Form>
                            <label htmlFor="firstname">First name</label>
                            <Field name="firstname" type="text" className="form-control"/>
                            {formik.values.firstname}
                            <ErrorMessage name="firstname"/>
                            { formik.errors.firstname && formik.touched.firstname ?
                                <span>{ formik.errors.firstname }</span>
                            :null}
                            <hr className="mb-4" />

                            <Field
                                name="lastname"
                                component={formikInputCustomField}
                                placeholder="Last name"
                                labelName="Enter lastname"
                            />

                            <hr className="mb-4" />
                            <button className="btn btn-primary btn-lg btn-block" type="submit">
                                Submit
                            </button>
                        </Form>
                    </div>
                </div>

            ) }
        </Formik>

    )
}

export default FormThree;
/////////////////
//CUSTOMS FIELDS ////
////////////////
import React from 'react';
import { Formik , Form, Field, ErrorMessage } from 'formik';
import * as Yup from 'yup';

const FormThree = () => {

    const formikProps = {
        initialValues:{ firstname:'', color:'', lastname:'',age:''},
        validationSchema:Yup.object({
            firstname: Yup.string().required('Sorry, this is required'),
            lastname: Yup.string().required('Sorry, this is required'),
            age: Yup.string().required('Sorry, this is required')
        }),
        onSubmit: values => {
            console.log(values)
        }
    }

    const formikInputCustomField = ({
        field, // {name, value, onChange, onBlur}
        form: { touched, errors },
        ...props
    }) => (
        <>

            <label htmlFor={field.name}>{props.labelName}</label>
            <input
                type="text"  // {HERE I CUSTOM FIELD}
                className="form-control"
                placeholder={props.placeholder}
                {...field}
            />
            { errors[field.name] && touched[field.name] ?
                <span>{errors[field.name]}</span>
            :null
            }
        </>

    )




    return(
        <Formik {...formikProps}>
            { formik => (
                <div className="container">
                    <div className="col-md-12 mt-5">
                        <Form>
                            <label htmlFor="firstname">First name</label>
                            <Field name="firstname" type="text" className="form-control"/>
                            {formik.values.firstname}
                            <ErrorMessage name="firstname"/>
                            { formik.errors.firstname && formik.touched.firstname ?
                                <span>{ formik.errors.firstname }</span>
                            :null}
                            <hr className="mb-4" />

                            <Field
                                name="lastname"
                                component={formikInputCustomField}
                                placeholder="Last name"
                                labelName="Enter your lastname"
                            />


                            <hr className="mb-4" />
                            <button className="btn btn-primary btn-lg btn-block" type="submit">
                                Submit
                            </button>
                        </Form>
                    </div>
                </div>

            ) }
        </Formik>

    )
}

export default FormThree;
